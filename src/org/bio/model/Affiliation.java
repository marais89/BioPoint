package org.bio.model;

// Generated 19 mars 2014 17:02:06 by Hibernate Tools 4.0.0

import java.util.ArrayList;
import java.util.HashSet;
import java.util.List;
import java.util.Set;

import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.OneToOne;
import javax.persistence.Table;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Affiliation generated by hbm2java
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "affiliation")
public class Affiliation implements java.io.Serializable {

	@Override
	public String toString() {
		if(this.type.equals("DI"))
		return "Direction "+this.designation;
		else if(this.type.equals("SE"))
			return "Service "+this.designation;
		else if(this.type.equals("EQ"))
			return "Equipe "+this.designation;
		else
				return this.designation;
	}

	private Integer idaff;
	private Affiliation affiliation;
	private String designation;
	private String description;
	private String type;
	private Set<Affiliation> affiliations = new HashSet<Affiliation>(0);
	private Set<Historique> historiques = new HashSet<Historique>(0);
	private Set<Operateur> operateurs = new HashSet<Operateur>(0);
	private Societe societe;
	private List<Affiliation> affiliationChildren;
private String codeteam;
	public Affiliation() {
	}

	public Affiliation(Integer idaff) {
		this.idaff = idaff;
	}

	public Affiliation(Integer idaff, Affiliation affiliation, String designation,
			String description, String type, Set<Affiliation> affiliations,
			Set<Historique> historiques, Set<Operateur> operateurs,
			Societe societe) {
		this.idaff = idaff;
		this.affiliation = affiliation;
		this.designation = designation;
		this.description = description;
		this.type = type;
		this.affiliations = affiliations;
		this.historiques = historiques;
		this.operateurs = operateurs;
		this.societe = societe;
	}

	@Id
	@GeneratedValue(strategy=GenerationType.IDENTITY)
	@Column(name = "idaff", unique = true, nullable = false)
	public Integer getIdaff() {
		return this.idaff;
	}

	public void setIdaff(Integer idaff) {
		this.idaff = idaff;
	}
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idpar")
	public Affiliation getAffiliation() {
		return this.affiliation;
	}
	public void setAffiliation(Affiliation affiliation) {
		this.affiliation = affiliation;
	}

	@Column(name = "designation", length = 30)
	public String getDesignation() {
		return this.designation;
	}

	public void setDesignation(String designation) {
		this.designation = designation;
	}

	@Column(name = "description")
	public String getDescription() {
		return this.description;
	}

	public void setDescription(String description) {
		this.description = description;
	}

	@Column(name = "type", length = 20)
	public String getType() {
		return this.type;
	}

	public void setType(String type) {
		this.type = type;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "affiliation")
	public Set<Affiliation> getAffiliations() {
		return this.affiliations;
	}

	public void setAffiliations(Set<Affiliation> affiliations) {
		this.affiliations = affiliations;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "affiliation")
	public Set<Historique> getHistoriques() {
		return this.historiques;
	}

	public void setHistoriques(Set<Historique> historiques) {
		this.historiques = historiques;
	}

	@ManyToMany(fetch = FetchType.LAZY, mappedBy = "affiliations")
	public Set<Operateur> getOperateurs() {
		return this.operateurs;
	}

	public void setOperateurs(Set<Operateur> operateurs) {
		this.operateurs = operateurs;
	}
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	@OneToOne(fetch = FetchType.EAGER, mappedBy = "affiliation")
	public Societe getSociete() {
		return this.societe;
	}

	public void setSociete(Societe societe) {
		this.societe = societe;
	}
	@Column(name = "codeteam", length = 20)
	public String getCodeteam() {
		return codeteam;
	}

	public void setCodeteam(String codeteam) {
		this.codeteam = codeteam;
	}
@Transient
	public List<Affiliation> getAffiliationChildren() {
	
	return affiliationChildren;
	}

	public void setAffiliationChildren(List<Affiliation> affiliationChildren) {
		this.affiliationChildren = affiliationChildren;
	}

}
