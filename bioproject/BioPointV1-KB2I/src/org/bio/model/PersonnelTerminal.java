package org.bio.model;

// Generated 19 mars 2014 17:02:06 by Hibernate Tools 4.0.0

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.JoinColumn;
import javax.persistence.ManyToOne;
import javax.persistence.Table;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * PersonnelTerminal generated by hbm2java
 */
@Entity
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
@Table(name = "personnel_terminal")
public class PersonnelTerminal implements java.io.Serializable {

	private PersonnelTerminalId id;
	private Terminaux terminaux;
	private Personnel personnel;
	private Boolean uploaded;
	private Boolean delete;
	private Integer upload;
	private String info;
	private Integer bckId;

	public PersonnelTerminal() {
	}

	public PersonnelTerminal(PersonnelTerminalId id, Terminaux terminaux,
			Personnel personnel) {
		this.id = id;
		this.terminaux = terminaux;
		this.personnel = personnel;
	}

	public PersonnelTerminal(PersonnelTerminalId id, Terminaux terminaux,
			Personnel personnel, Boolean uploaded, Boolean delete,
			Integer upload, String info, Integer bckId) {
		this.id = id;
		this.terminaux = terminaux;
		this.personnel = personnel;
		this.uploaded = uploaded;
		this.delete = delete;
		this.upload = upload;
		this.info = info;
		this.bckId = bckId;
	}

	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "idper", column = @Column(name = "idper", nullable = false)),
			@AttributeOverride(name = "idter", column = @Column(name = "idter", nullable = false)) })
	public PersonnelTerminalId getId() {
		return this.id;
	}

	public void setId(PersonnelTerminalId id) {
		this.id = id;
	}
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idter", nullable = false, insertable = false, updatable = false)
	public Terminaux getTerminaux() {
		return this.terminaux;
	}

	public void setTerminaux(Terminaux terminaux) {
		this.terminaux = terminaux;
	}
	@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idper", nullable = false, insertable = false, updatable = false)
	public Personnel getPersonnel() {
		return this.personnel;
	}

	public void setPersonnel(Personnel personnel) {
		this.personnel = personnel;
	}

	@Column(name = "uploadedP")
	public Boolean getUploaded() {
		return this.uploaded;
	}

	public void setUploaded(Boolean uploaded) {
		this.uploaded = uploaded;
	}

	@Column(name = "deleteP")
	public Boolean getDelete() {
		return this.delete;
	}

	public void setDelete(Boolean delete) {
		this.delete = delete;
	}

	@Column(name = "uploadP")
	public Integer getUpload() {
		return this.upload;
	}

	public void setUpload(Integer upload) {
		this.upload = upload;
	}

	@Column(name = "infoP", length = 20)
	public String getInfo() {
		return this.info;
	}

	public void setInfo(String info) {
		this.info = info;
	}

	@Column(name = "bckId")
	public Integer getBckId() {
		return this.bckId;
	}

	public void setBckId(Integer bckId) {
		this.bckId = bckId;
	}

}
