package org.bio.model;

// Generated 19 mars 2014 17:02:06 by Hibernate Tools 4.0.0

import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.Date;

import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.GeneratedValue;
import javax.persistence.GenerationType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinColumns;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;
import javax.persistence.Transient;

import org.hibernate.annotations.Cache;
import org.hibernate.annotations.CacheConcurrencyStrategy;

/**
 * Pointage generated by hbm2java
 */
@Entity
@Table(name = "pointage")
@Cache(usage=CacheConcurrencyStrategy.READ_WRITE)
public class Pointage implements java.io.Serializable {

	private SequenceDetail sequenceDetail;
	private Personnel personnel;
	private Date e1;
	private Date s1;
	private Date e2;
	private Date s2;
	private Date sa;
	private Date ra;
	private Date retardAuto;

	private Boolean absent;
	private Date retard1;
	private Date retard2;
	private Date retardTotal;
	private Date presenceHrMn;
	private Date retardHrMn;
	private Date hsupHrMn;
	private Date budgHrMn;
	private Boolean ferie;
	private Boolean conge;
	private Conge autorisation;
	private Boolean anomalie;
	private String typeSup;
private Integer jour;
private Date tmp;
private PointageId id;
	public Pointage() {
		String s="00:00:00";
		SimpleDateFormat formatter = new SimpleDateFormat("HH:mm:ss");
		try {
			tmp = formatter.parse(s);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		conge = false;
		ferie = false;
		absent = false;
		anomalie=false;
	}

	public Pointage(PointageId id, SequenceDetail sequenceDetail,
			Personnel personnel) {
		this.id = id;
		this.sequenceDetail = sequenceDetail;
		this.personnel = personnel;
	}

	public Pointage(PointageId id, SequenceDetail sequenceDetail,
			Personnel personnel, Date e1, Date s1, Date e2, Date s2,
			Boolean absent, Date retard1, Date retard2, Date retardTotal,
			Date presenceHrMn, Date retardHrMn, Date hsupHrMn, Date budgHrMn,
			Boolean ferie, Boolean conge, Conge autorisation, String typeSup) {
		this.id = id;
		this.sequenceDetail = sequenceDetail;
		this.personnel = personnel;
		this.e1 = e1;
		this.s1 = s1;
		this.e2 = e2;
		this.s2 = s2;
		this.absent = absent;
		this.retard1 = retard1;
		this.retard2 = retard2;
		this.retardTotal = retardTotal;
		this.presenceHrMn = presenceHrMn;
		this.retardHrMn = retardHrMn;
		this.hsupHrMn = hsupHrMn;
		this.budgHrMn = budgHrMn;
		this.ferie = ferie;
		this.conge = conge;
		this.autorisation = autorisation;
		this.typeSup = typeSup;
	}

	
	@EmbeddedId
	@AttributeOverrides({
			@AttributeOverride(name = "jour", column = @Column(name = "jour", nullable = false, length = 10)),
			@AttributeOverride(name = "idper", column = @Column(name = "idper", nullable = false)) })
	public PointageId getId() {
		return this.id;
	}

	public void setId(PointageId id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumns({
			@JoinColumn(name = "numjour", referencedColumnName = "jour", nullable = false),
			@JoinColumn(name = "detailJour", referencedColumnName = "idseqd", nullable = false) })
	public SequenceDetail getSequenceDetail() {
		return this.sequenceDetail;
	}

	public void setSequenceDetail(SequenceDetail sequenceDetail) {
		this.sequenceDetail = sequenceDetail;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "idper", nullable = false, insertable = false, updatable = false)
	public Personnel getPersonnel() {
		return this.personnel;
	}

	public void setPersonnel(Personnel personnel) {
		this.personnel = personnel;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "e1", length = 8)
	public Date getE1() {
	
		return this.e1;
	}

	public void setE1(Date e1) {
		this.e1 = e1;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "s1", length = 8)
	public Date getS1() {
		
		return this.s1;
	}

	public void setS1(Date s1) {
		this.s1 = s1;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "e2", length = 8)
	public Date getE2() {
		
		return this.e2;
	}

	public void setE2(Date e2) {
		this.e2 = e2;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "s2", length = 8)
	public Date getS2() {
		
		return this.s2;
	}

	public void setS2(Date s2) {
		
		this.s2 = s2;
	}

	@Column(name = "absent")
	public Boolean getAbsent() {
		return this.absent;
	}

	public void setAbsent(Boolean absent) {
		this.absent = absent;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "retard1", length = 8)
	public Date getRetard1() {
		if(this.retard1==null)
		{
		return tmp;
		}else
		return this.retard1;
	}

	public void setRetard1(Date retard1) {
		this.retard1 = retard1;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "retard2", length = 8)
	public Date getRetard2() {
		if(this.retard2==null)
		{
		return tmp;
		}else
		return this.retard2;
	}

	public void setRetard2(Date retard2) {
		this.retard2 = retard2;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "retardTotal", length = 8)
	public Date getRetardTotal() {
		if(retardTotal==null)
			return tmp;
		else
		return this.retardTotal;
	}

	public void setRetardTotal(Date retardTotal) {
		this.retardTotal = retardTotal;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "presenceHrMn", length = 8)
	public Date getPresenceHrMn() {
		return this.presenceHrMn;
	}

	public void setPresenceHrMn(Date presenceHrMn) {
		this.presenceHrMn = presenceHrMn;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "retardHrMn", length = 8)
	public Date getRetardHrMn() {
		if(retardHrMn==null)
			return tmp;
		else
		return this.retardHrMn;
	}

	public void setRetardHrMn(Date retardHrMn) {
		this.retardHrMn = retardHrMn;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "hSupHrMn", length = 8)
	public Date getHsupHrMn() {
		if(hsupHrMn==null)
		return tmp;
		else
		return this.hsupHrMn;
	}

	public void setHsupHrMn(Date hsupHrMn) {
		this.hsupHrMn = hsupHrMn;
	}

	@Temporal(TemporalType.TIME)
	@Column(name = "budgHrMn", length = 8)
	public Date getBudgHrMn() {
		return this.budgHrMn;
	}

	public void setBudgHrMn(Date budgHrMn) {
		this.budgHrMn = budgHrMn;
	}

	@Column(name = "ferie")
	public Boolean getFerie() {
		return this.ferie;
	}

	public void setFerie(Boolean ferie) {
		this.ferie = ferie;
	}

	@Column(name = "conge")
	public Boolean getConge() {
		return this.conge;
	}

	public void setConge(Boolean conge) {
		this.conge = conge;
	}
	@ManyToOne(fetch = FetchType.EAGER)
	@JoinColumn(name = "autorisation", nullable = false, insertable = true, updatable = false)
	public Conge getAutorisation() {
		return this.autorisation;
	}

	public void setAutorisation(Conge autorisation) {
		this.autorisation = autorisation;
	}

	@Column(name = "typeSup", length = 10)
	public String getTypeSup() {
		return this.typeSup;
	}

	public void setTypeSup(String typeSup) {
		this.typeSup = typeSup;
	}

	
	
	@Column(name = "numjour",insertable=false, updatable=false)
	public Integer getJour() {
		return jour;
	}

	public void setJour(Integer jour) {
		this.jour = jour;
	}

	@Override
	public String toString() {
		return "Pointage [id=" + id +"Date "+id.getJour() 
				+", sequenceDetail=" + sequenceDetail
				+ ", personnel=" + personnel + ", e1=" + e1 + ", s1=" + s1
				+ ", e2=" + e2 + ", s2=" + s2 + ", absent=" + absent
				+ ", retard1=" + retard1 + ", retard2=" + retard2
				+ ", retardTotal=" + retardTotal + ", presenceHrMn="
				+ presenceHrMn + ", retardHrMn=" + retardHrMn + ", hsupHrMn="
				+ hsupHrMn + ", budgHrMn=" + budgHrMn + ", ferie=" + ferie
				+ ", conge=" + conge + ", autorisation=" + autorisation
				+ ", typeSup=" + typeSup + ", jour=" + jour + "]";
	}
	
@Transient
	public Date getTmp() {
		return tmp;
	}

	public void setTmp(Date tmp) {
		this.tmp = tmp;
	}
	@Column(name = "anomalie")
	public Boolean getAnomalie() {
		return anomalie;
	}

	public void setAnomalie(Boolean anomalie) {
		this.anomalie = anomalie;
	}
	@Temporal(TemporalType.TIME)
	@Column(name = "sa", length = 8)
	public Date getSa() {
		return sa;
	}

	public void setSa(Date sa) {
		this.sa = sa;
	}
	@Temporal(TemporalType.TIME)
	@Column(name = "ra", length = 8)
	public Date getRa() {
		return ra;
	}

	public void setRa(Date ra) {
		this.ra = ra;
	}
	@Temporal(TemporalType.TIME)
	@Column(name = "retardautorisation", length = 8)
	public Date getRetardAuto() {
		return retardAuto;
	}

	public void setRetardAuto(Date retardAuto) {
		this.retardAuto = retardAuto;
	}
	

}
